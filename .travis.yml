# Copyright (c) 2013-2018 Arm Limited. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the License); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: python
python: 2.7

env:
  global:
    - >
      STATUS=$'curl -so/dev/null --user "$MBED_BOT" --request POST
      https://api.github.com/repos/$TRAVIS_REPO_SLUG/statuses/${TRAVIS_PULL_REQUEST_SHA:-$TRAVIS_COMMIT}
      --data @- << DATA\n{
      "state": "$0",
      "description": "$1",
      "context": "travis-ci/$NAME",
      "target_url": "https://travis-ci.org/$TRAVIS_REPO_SLUG/jobs/$TRAVIS_JOB_ID"
      }\nDATA'

cache:
  pip: true
  directories:
    - $HOME/.cache/apt
    - $HOME/gcc-arm-none-eabi-6-2017-q2-update

before_install:
  - bash -c "$STATUS" pending "Local $NAME testing is in progress"
  # Make sure pipefail
  - set -o pipefail
  # Setup apt to cache
  - mkdir -p $HOME/.cache/apt/partial
  - sudo rm -rf /var/cache/apt/archives
  - sudo ln -s $HOME/.cache/apt /var/cache/apt/archives
  # Setup ppa to make sure arm-none-eabi-gcc is correct version
  - sudo add-apt-repository -y ppa:team-gcc-arm-embedded/ppa
  - sudo add-apt-repository -y ppa:deadsnakes/ppa
  # Loop until update succeeds (timeouts can occur)
  - travis_retry $(! sudo apt-get update 2>&1 |grep Failed)

after_success:
  - bash -c "$STATUS" success "Local $NAME testing has passed"

after_failure:
  - bash -c "$STATUS" failure "Local $NAME testing has failed"

matrix:
  include:
    - env:
        - NAME=astyle
      install:
      - curl -L0 https://mbed-os.s3-eu-west-1.amazonaws.com/builds/deps/astyle_3.1_linux.tar.gz --output astyle.tar.gz;
        mkdir -p BUILD && tar xf astyle.tar.gz -C BUILD;
        pushd BUILD/astyle/build/gcc;
        make;
        export PATH=$PWD/bin:$PATH;
        popd;
      - astyle --version
      script:
        # only changed files this time
        git diff --name-only --diff-filter=d $TRAVIS_BRANCH | grep '.*\.\(h\|c\|hpp\|cpp\)$' | fgrep -v -f .astyleignore | xargs -n 100 -I {} bash -c "astyle -n --options=.astylerc \"{}\"" > astyle-files-changed.out;
          if [ $(cat astyle-files-changed.out | grep Formatted | wc -l) -ne 0 ]; then
            git --no-pager diff;
            echo "";
            echo "AStyle check failed, please fix style issues as shown above";
            (exit 1);
          else
            echo "Coding style check OK";
          fi
      after_success:
        # run astyle for all files on the branch
        - git checkout -- .
        - find -regex '.*\.\(h\|c\|hpp\|cpp\)$' -type f | fgrep -v -f .astyleignore | xargs -n 100 -I {} bash -c "astyle -n --options=.astylerc \"{}\"" > astyle-branch.out;
        # update status if we succeeded, compare with master if possible
        - |
          CURR=$(cat astyle-branch.out | grep Formatted | wc -l)
          PREV=$(curl -u "$MBED_BOT" https://api.github.com/repos/$TRAVIS_REPO_SLUG/status/master \
              | jq -re "select(.sha != \"$TRAVIS_COMMIT\")
                  | .statuses[] | select(.context == \"travis-ci/$NAME\").description
                  | capture(\", (?<files>[0-9]+) files\").files" \
              || echo 0)

          STATUSM="Passed, ${CURR} files"
          if [ "$PREV" -ne 0 ]
          then
              STATUSM="$STATUSM ($(python -c "print '%+d' % ($CURR-$PREV)") files)"
          fi
        - bash -c "$STATUS" success "$STATUSM"
