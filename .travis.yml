# Copyright (c) 2013-2018 Arm Limited. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the License); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Notes:
# - How to use YAML multilines: https://yaml-multiline.info/

language: bash

cache:
  branch: bash
  directories:
    - ${HOME}/.cache/pip
    - ${HOME}/.cache/choco
    - ${HOME}/.cache/compilers

env:
  global:
    - deps_url="https://s3-eu-west-1.amazonaws.com/mbed-os/deps"
    - gcc6_path="${HOME}/.cache/compilers/gcc-arm-none-eabi-6-2017-q2-update"
    - gcc7_path="${HOME}/.cache/compilers/gcc-arm-none-eabi-7-2018-q2-update"
    - gcc8_path="${HOME}/.cache/compilers/gcc-arm-none-eabi-8-2018-q4-major"
    - compile_k64f="mbed test --compile -m K64F -t GCC_ARM"
    - |
      source_gcc=$'\
      local gcc_path=\"${1}\"; \
      local filename=\"${2}\"; \
      [ ! -d \"${gcc_path}\" ] && ( \
        curl --location \"${deps_url}/${filename}\" \
          --progress-bar --output \"${filename}\"; \
        mkdir -p \"${HOME}/.cache/compilers\"; \
        tar -xf \"${filename}\" -C \"${HOME}/.cache/compilers\"; \
        rm \"${filename}\"; \
      )'

install:
### Setup GCC ###
  - echo "${source_gcc}"
  - $source_gcc "${gcc6_path}" "gcc6-linux.tar.bz2"
  - ${gcc6_path}/bin/arm-none-eabi-gcc --version

  - $source_gcc "${gcc7_path}" "gcc7-linux.tar.bz2"
  - ${gcc7_path}/bin/arm-none-eabi-gcc --version

  - $source_gcc "${gcc8_path}" "gcc8-linux.tar.bz2"
  - ${gcc8_path}/bin/arm-none-eabi-gcc --version


### Setup Python ###
  - python --version
  # Update python install tools
  - python -m pip install --upgrade pip==18.1
  - python -m pip install --upgrade setuptools==40.4.3
  # Install required modules
  - |-
    tr -d ' ' >> requirements.txt <<< "
    mock==2.0.0
    pytest==3.3.0
    pylint>=1.9,<2
    hypothesis>=3,<4
    coverage>=4.5,<5
    coveralls>=1.5,<2
    "
  - pip install -r requirements.txt --cache-dir ${HOME}/.cache/pip
  - pip list --verbose

### Setup Mbed CLI ###
  - pip install mbed-cli
  - mbed --version

script:
### Test Python ###
  #- PYTHONPATH=. coverage run -a -m pytest tools/test
  #- python tools/test/pylint.py
  #- coverage run -a tools/project.py -S | sed -n '/^Total/p'
  #- coverage html

### Test Compile ###
  - |
    mbed config --global GCC_ARM_PATH "${gcc6_path}/bin"
    ${compile_k64f} --stats-depth=0 --clean 2>&1 \
      || ${compile_k64f} --verbose 2>&1 \
      || true
  - |
    mbed config --global GCC_ARM_PATH "${gcc7_path}/bin"
    ${compile_k64f} --stats-depth=0 --clean 2>&1 \
      || ${compile_k64f} --verbose 2>&1 \
      || true
  - |
    mbed config --global GCC_ARM_PATH "${gcc8_path}/bin"
    ${compile_k64f} --stats-depth=0 --clean 2>&1 \
      || ${compile_k64f} --verbose 2>&1 \
      || true

matrix:
  include:

    ### Linux ###
    - &linux-vm
      stage: linux/py
      name: linux/py27
      os: linux
      dist: xenial
      python: 2.7
      language: python

    - <<: *linux-vm
      name: linux/py35
      python: 3.5

    - <<: *linux-vm
      name: linux/py36
      python: 3.6

    - <<: *linux-vm
      name: linux/py37
      python: 3.7


    ### Windows ###
    - &windows-vm
      stage: windows/py
      name: windows/py27
      os: windows
      env: py_ver=2.7.15 py_pkg_name=python2 py_path="/c/Python27"
      before_install:
        - exit 0
        - choco config set cacheLocation ${HOME}/.cache/choco
        - choco install ${py_pkg_name} --version ${py_ver}
        - export "PATH=${py_path}:${py_path}/Scripts/:${PATH}"
      install:
        - exit 0
      script:
        - exit 0

    - <<: *windows-vm
      name: windows/py35
      env: py_ver=3.5.4 py_pkg_name=python3 py_path="/c/Python35"

    - <<: *windows-vm
      name: windows/py36
      env: py_ver=3.6.8 py_pkg_name=python3 py_path="/c/Python36"

    - <<: *windows-vm
      name: windows/py37
      env: py_ver=3.7.2 py_pkg_name=python3 py_path="/c/Python37"
